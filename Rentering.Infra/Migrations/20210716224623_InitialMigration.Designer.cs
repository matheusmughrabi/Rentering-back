// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rentering.Infra;

namespace Rentering.Infra.Migrations
{
    [DbContext(typeof(RenteringDbContext))]
    [Migration("20210716224623_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Rentering.Accounts.Domain.Entities.AccountEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("Rentering.Contracts.Domain.Entities.AccountContractsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<int>("ParticipantRole")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("AccountContracts");
                });

            modelBuilder.Entity("Rentering.Contracts.Domain.Entities.ContractEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ContractEndDate")
                        .HasColumnType("date");

                    b.Property<string>("ContractName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ContractStartDate")
                        .HasColumnType("date");

                    b.Property<int>("ContractState")
                        .HasColumnType("int");

                    b.Property<DateTime>("RentDueDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Rentering.Contracts.Domain.Entities.ContractPaymentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Month")
                        .HasColumnType("Date");

                    b.Property<int>("RenterPaymentStatus")
                        .HasColumnType("int");

                    b.Property<int>("TenantPaymentStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("ContractPayments");
                });

            modelBuilder.Entity("Rentering.Accounts.Domain.Entities.AccountEntity", b =>
                {
                    b.OwnsOne("Rentering.Accounts.Domain.ValueObjects.EmailValueObject", "Email", b1 =>
                        {
                            b1.Property<int>("AccountEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Email");

                            b1.HasKey("AccountEntityId");

                            b1.ToTable("Account");

                            b1.WithOwner()
                                .HasForeignKey("AccountEntityId");
                        });

                    b.OwnsOne("Rentering.Accounts.Domain.ValueObjects.PasswordValueObject", "Password", b1 =>
                        {
                            b1.Property<int>("AccountEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Password")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Password");

                            b1.HasKey("AccountEntityId");

                            b1.ToTable("Account");

                            b1.WithOwner()
                                .HasForeignKey("AccountEntityId");
                        });

                    b.OwnsOne("Rentering.Accounts.Domain.ValueObjects.UsernameValueObject", "Username", b1 =>
                        {
                            b1.Property<int>("AccountEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Username")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Username");

                            b1.HasKey("AccountEntityId");

                            b1.ToTable("Account");

                            b1.WithOwner()
                                .HasForeignKey("AccountEntityId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Password")
                        .IsRequired();

                    b.Navigation("Username")
                        .IsRequired();
                });

            modelBuilder.Entity("Rentering.Contracts.Domain.Entities.AccountContractsEntity", b =>
                {
                    b.HasOne("Rentering.Contracts.Domain.Entities.ContractEntity", "Contract")
                        .WithMany("Participants")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("Rentering.Contracts.Domain.Entities.ContractEntity", b =>
                {
                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.PriceValueObject", "RentPrice", b1 =>
                        {
                            b1.Property<int>("ContractEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("Price")
                                .HasColumnType("decimal(19,5)")
                                .HasColumnName("Price");

                            b1.HasKey("ContractEntityId");

                            b1.ToTable("Contracts");

                            b1.WithOwner()
                                .HasForeignKey("ContractEntityId");
                        });

                    b.Navigation("RentPrice")
                        .IsRequired();
                });

            modelBuilder.Entity("Rentering.Contracts.Domain.Entities.ContractPaymentEntity", b =>
                {
                    b.HasOne("Rentering.Contracts.Domain.Entities.ContractEntity", null)
                        .WithMany("Payments")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.PriceValueObject", "RentPrice", b1 =>
                        {
                            b1.Property<int>("ContractPaymentEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("Price")
                                .HasColumnType("decimal(19,5)")
                                .HasColumnName("Price");

                            b1.HasKey("ContractPaymentEntityId");

                            b1.ToTable("ContractPayments");

                            b1.WithOwner()
                                .HasForeignKey("ContractPaymentEntityId");
                        });

                    b.Navigation("RentPrice")
                        .IsRequired();
                });

            modelBuilder.Entity("Rentering.Contracts.Domain.Entities.ContractEntity", b =>
                {
                    b.Navigation("Participants");

                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
