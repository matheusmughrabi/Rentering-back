// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rentering.Infra;

namespace Rentering.Infra.Migrations
{
    [DbContext(typeof(RenteringDbContext))]
    partial class RenteringDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Rentering.Accounts.Domain.Entities.AccountEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("Rentering.Contracts.Domain.Entities.AccountContractsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<int>("ParticipantRole")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ContractId");

                    b.ToTable("AccountContracts");
                });

            modelBuilder.Entity("Rentering.Contracts.Domain.Entities.ContractPaymentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Month")
                        .HasColumnType("Date");

                    b.Property<int>("RenterPaymentStatus")
                        .HasColumnType("int");

                    b.Property<int>("TenantPaymentStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("ContractPayments");
                });

            modelBuilder.Entity("Rentering.Contracts.Domain.Entities.EstateContractEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ContractEndDate")
                        .HasColumnType("date");

                    b.Property<string>("ContractName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ContractStartDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("RentDueDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("EstateContracts");
                });

            modelBuilder.Entity("Rentering.Contracts.Domain.Entities.GuarantorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<int>("GuarantorStatus")
                        .HasColumnType("int");

                    b.Property<int>("MaritalStatus")
                        .HasColumnType("int");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ocupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SpouseNationality")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SpouseOcupation")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("Guarantors");
                });

            modelBuilder.Entity("Rentering.Contracts.Domain.Entities.RenterEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<int>("MaritalStatus")
                        .HasColumnType("int");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ocupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RenterStatus")
                        .HasColumnType("int");

                    b.Property<string>("SpouseNationality")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("Renters");
                });

            modelBuilder.Entity("Rentering.Contracts.Domain.Entities.TenantEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<int>("MaritalStatus")
                        .HasColumnType("int");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ocupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SpouseNationality")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SpouseOcupation")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TenantStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("Rentering.Accounts.Domain.Entities.AccountEntity", b =>
                {
                    b.OwnsOne("Rentering.Accounts.Domain.ValueObjects.EmailValueObject", "Email", b1 =>
                        {
                            b1.Property<int>("AccountEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Email");

                            b1.HasKey("AccountEntityId");

                            b1.ToTable("Account");

                            b1.WithOwner()
                                .HasForeignKey("AccountEntityId");
                        });

                    b.OwnsOne("Rentering.Accounts.Domain.ValueObjects.PasswordValueObject", "Password", b1 =>
                        {
                            b1.Property<int>("AccountEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Password")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Password");

                            b1.HasKey("AccountEntityId");

                            b1.ToTable("Account");

                            b1.WithOwner()
                                .HasForeignKey("AccountEntityId");
                        });

                    b.OwnsOne("Rentering.Accounts.Domain.ValueObjects.UsernameValueObject", "Username", b1 =>
                        {
                            b1.Property<int>("AccountEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Username")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Username");

                            b1.HasKey("AccountEntityId");

                            b1.ToTable("Account");

                            b1.WithOwner()
                                .HasForeignKey("AccountEntityId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Password")
                        .IsRequired();

                    b.Navigation("Username")
                        .IsRequired();
                });

            modelBuilder.Entity("Rentering.Contracts.Domain.Entities.AccountContractsEntity", b =>
                {
                    b.HasOne("Rentering.Accounts.Domain.Entities.AccountEntity", null)
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rentering.Contracts.Domain.Entities.EstateContractEntity", "EstateContract")
                        .WithMany("Participants")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstateContract");
                });

            modelBuilder.Entity("Rentering.Contracts.Domain.Entities.ContractPaymentEntity", b =>
                {
                    b.HasOne("Rentering.Contracts.Domain.Entities.EstateContractEntity", null)
                        .WithMany("Payments")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.PriceValueObject", "RentPrice", b1 =>
                        {
                            b1.Property<int>("ContractPaymentEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("Price")
                                .HasColumnType("decimal(19,5)")
                                .HasColumnName("Price");

                            b1.HasKey("ContractPaymentEntityId");

                            b1.ToTable("ContractPayments");

                            b1.WithOwner()
                                .HasForeignKey("ContractPaymentEntityId");
                        });

                    b.Navigation("RentPrice")
                        .IsRequired();
                });

            modelBuilder.Entity("Rentering.Contracts.Domain.Entities.EstateContractEntity", b =>
                {
                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.AddressValueObject", "Address", b1 =>
                        {
                            b1.Property<int>("EstateContractEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("CEP")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("CEP");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("City");

                            b1.Property<string>("Neighborhood")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Neighborhood");

                            b1.Property<int>("State")
                                .HasColumnType("int")
                                .HasColumnName("State");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Street");

                            b1.HasKey("EstateContractEntityId");

                            b1.ToTable("EstateContracts");

                            b1.WithOwner()
                                .HasForeignKey("EstateContractEntityId");
                        });

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.PriceValueObject", "RentPrice", b1 =>
                        {
                            b1.Property<int>("EstateContractEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("Price")
                                .HasColumnType("decimal(19,5)")
                                .HasColumnName("Price");

                            b1.HasKey("EstateContractEntityId");

                            b1.ToTable("EstateContracts");

                            b1.WithOwner()
                                .HasForeignKey("EstateContractEntityId");
                        });

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.PropertyRegistrationNumberValueObject", "PropertyRegistrationNumber", b1 =>
                        {
                            b1.Property<int>("EstateContractEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("Number")
                                .HasColumnType("int")
                                .HasColumnName("Number");

                            b1.HasKey("EstateContractEntityId");

                            b1.ToTable("EstateContracts");

                            b1.WithOwner()
                                .HasForeignKey("EstateContractEntityId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("PropertyRegistrationNumber")
                        .IsRequired();

                    b.Navigation("RentPrice")
                        .IsRequired();
                });

            modelBuilder.Entity("Rentering.Contracts.Domain.Entities.GuarantorEntity", b =>
                {
                    b.HasOne("Rentering.Contracts.Domain.Entities.EstateContractEntity", null)
                        .WithMany("Guarantors")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.AddressValueObject", "Address", b1 =>
                        {
                            b1.Property<int>("GuarantorEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("CEP")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("CEP");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("City");

                            b1.Property<string>("Neighborhood")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Neighborhood");

                            b1.Property<int>("State")
                                .HasColumnType("int")
                                .HasColumnName("State");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Street");

                            b1.HasKey("GuarantorEntityId");

                            b1.ToTable("Guarantors");

                            b1.WithOwner()
                                .HasForeignKey("GuarantorEntityId");
                        });

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.CPFValueObject", "CPF", b1 =>
                        {
                            b1.Property<int>("GuarantorEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("CPF")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("CPF");

                            b1.HasKey("GuarantorEntityId");

                            b1.ToTable("Guarantors");

                            b1.WithOwner()
                                .HasForeignKey("GuarantorEntityId");
                        });

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.CPFValueObject", "SpouseCPF", b1 =>
                        {
                            b1.Property<int>("GuarantorEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("CPF")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("SpouseCPF");

                            b1.HasKey("GuarantorEntityId");

                            b1.ToTable("Guarantors");

                            b1.WithOwner()
                                .HasForeignKey("GuarantorEntityId");
                        });

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.IdentityRGValueObject", "IdentityRG", b1 =>
                        {
                            b1.Property<int>("GuarantorEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("IdentityRG")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("IdentityRG");

                            b1.HasKey("GuarantorEntityId");

                            b1.ToTable("Guarantors");

                            b1.WithOwner()
                                .HasForeignKey("GuarantorEntityId");
                        });

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.IdentityRGValueObject", "SpouseIdentityRG", b1 =>
                        {
                            b1.Property<int>("GuarantorEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("IdentityRG")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("SpouseIdentityRG");

                            b1.HasKey("GuarantorEntityId");

                            b1.ToTable("Guarantors");

                            b1.WithOwner()
                                .HasForeignKey("GuarantorEntityId");
                        });

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.NameValueObject", "Name", b1 =>
                        {
                            b1.Property<int>("GuarantorEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("LastName");

                            b1.HasKey("GuarantorEntityId");

                            b1.ToTable("Guarantors");

                            b1.WithOwner()
                                .HasForeignKey("GuarantorEntityId");
                        });

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.NameValueObject", "SpouseName", b1 =>
                        {
                            b1.Property<int>("GuarantorEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("SpouseFirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("SpouseLastName");

                            b1.HasKey("GuarantorEntityId");

                            b1.ToTable("Guarantors");

                            b1.WithOwner()
                                .HasForeignKey("GuarantorEntityId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("CPF")
                        .IsRequired();

                    b.Navigation("IdentityRG")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("SpouseCPF");

                    b.Navigation("SpouseIdentityRG");

                    b.Navigation("SpouseName");
                });

            modelBuilder.Entity("Rentering.Contracts.Domain.Entities.RenterEntity", b =>
                {
                    b.HasOne("Rentering.Contracts.Domain.Entities.EstateContractEntity", null)
                        .WithMany("Renters")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.AddressValueObject", "Address", b1 =>
                        {
                            b1.Property<int>("RenterEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("CEP")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("CEP");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("City");

                            b1.Property<string>("Neighborhood")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Neighborhood");

                            b1.Property<int>("State")
                                .HasColumnType("int")
                                .HasColumnName("State");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Street");

                            b1.HasKey("RenterEntityId");

                            b1.ToTable("Renters");

                            b1.WithOwner()
                                .HasForeignKey("RenterEntityId");
                        });

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.CPFValueObject", "CPF", b1 =>
                        {
                            b1.Property<int>("RenterEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("CPF")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("CPF");

                            b1.HasKey("RenterEntityId");

                            b1.ToTable("Renters");

                            b1.WithOwner()
                                .HasForeignKey("RenterEntityId");
                        });

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.CPFValueObject", "SpouseCPF", b1 =>
                        {
                            b1.Property<int>("RenterEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("CPF")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("SpouseCPF");

                            b1.HasKey("RenterEntityId");

                            b1.ToTable("Renters");

                            b1.WithOwner()
                                .HasForeignKey("RenterEntityId");
                        });

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.IdentityRGValueObject", "IdentityRG", b1 =>
                        {
                            b1.Property<int>("RenterEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("IdentityRG")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("IdentityRG");

                            b1.HasKey("RenterEntityId");

                            b1.ToTable("Renters");

                            b1.WithOwner()
                                .HasForeignKey("RenterEntityId");
                        });

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.IdentityRGValueObject", "SpouseIdentityRG", b1 =>
                        {
                            b1.Property<int>("RenterEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("IdentityRG")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("SpouseIdentityRG");

                            b1.HasKey("RenterEntityId");

                            b1.ToTable("Renters");

                            b1.WithOwner()
                                .HasForeignKey("RenterEntityId");
                        });

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.NameValueObject", "Name", b1 =>
                        {
                            b1.Property<int>("RenterEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("LastName");

                            b1.HasKey("RenterEntityId");

                            b1.ToTable("Renters");

                            b1.WithOwner()
                                .HasForeignKey("RenterEntityId");
                        });

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.NameValueObject", "SpouseName", b1 =>
                        {
                            b1.Property<int>("RenterEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("SpouseFirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("SpouseLastName");

                            b1.HasKey("RenterEntityId");

                            b1.ToTable("Renters");

                            b1.WithOwner()
                                .HasForeignKey("RenterEntityId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("CPF")
                        .IsRequired();

                    b.Navigation("IdentityRG")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("SpouseCPF");

                    b.Navigation("SpouseIdentityRG");

                    b.Navigation("SpouseName");
                });

            modelBuilder.Entity("Rentering.Contracts.Domain.Entities.TenantEntity", b =>
                {
                    b.HasOne("Rentering.Contracts.Domain.Entities.EstateContractEntity", null)
                        .WithMany("Tenants")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.AddressValueObject", "Address", b1 =>
                        {
                            b1.Property<int>("TenantEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("CEP")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("CEP");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("City");

                            b1.Property<string>("Neighborhood")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Neighborhood");

                            b1.Property<int>("State")
                                .HasColumnType("int")
                                .HasColumnName("State");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Street");

                            b1.HasKey("TenantEntityId");

                            b1.ToTable("Tenants");

                            b1.WithOwner()
                                .HasForeignKey("TenantEntityId");
                        });

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.CPFValueObject", "CPF", b1 =>
                        {
                            b1.Property<int>("TenantEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("CPF")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("CPF");

                            b1.HasKey("TenantEntityId");

                            b1.ToTable("Tenants");

                            b1.WithOwner()
                                .HasForeignKey("TenantEntityId");
                        });

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.CPFValueObject", "SpouseCPF", b1 =>
                        {
                            b1.Property<int>("TenantEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("CPF")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("SpouseCPF");

                            b1.HasKey("TenantEntityId");

                            b1.ToTable("Tenants");

                            b1.WithOwner()
                                .HasForeignKey("TenantEntityId");
                        });

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.IdentityRGValueObject", "IdentityRG", b1 =>
                        {
                            b1.Property<int>("TenantEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("IdentityRG")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("IdentityRG");

                            b1.HasKey("TenantEntityId");

                            b1.ToTable("Tenants");

                            b1.WithOwner()
                                .HasForeignKey("TenantEntityId");
                        });

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.IdentityRGValueObject", "SpouseIdentityRG", b1 =>
                        {
                            b1.Property<int>("TenantEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("IdentityRG")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("SpouseIdentityRG");

                            b1.HasKey("TenantEntityId");

                            b1.ToTable("Tenants");

                            b1.WithOwner()
                                .HasForeignKey("TenantEntityId");
                        });

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.NameValueObject", "Name", b1 =>
                        {
                            b1.Property<int>("TenantEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("LastName");

                            b1.HasKey("TenantEntityId");

                            b1.ToTable("Tenants");

                            b1.WithOwner()
                                .HasForeignKey("TenantEntityId");
                        });

                    b.OwnsOne("Rentering.Contracts.Domain.ValueObjects.NameValueObject", "SpouseName", b1 =>
                        {
                            b1.Property<int>("TenantEntityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("SpouseFirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("SpouseLastName");

                            b1.HasKey("TenantEntityId");

                            b1.ToTable("Tenants");

                            b1.WithOwner()
                                .HasForeignKey("TenantEntityId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("CPF")
                        .IsRequired();

                    b.Navigation("IdentityRG")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("SpouseCPF");

                    b.Navigation("SpouseIdentityRG");

                    b.Navigation("SpouseName");
                });

            modelBuilder.Entity("Rentering.Contracts.Domain.Entities.EstateContractEntity", b =>
                {
                    b.Navigation("Guarantors");

                    b.Navigation("Participants");

                    b.Navigation("Payments");

                    b.Navigation("Renters");

                    b.Navigation("Tenants");
                });
#pragma warning restore 612, 618
        }
    }
}
